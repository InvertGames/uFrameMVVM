// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Invert.MVVMTest {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UniRx;
    
    
    public class HeadTrainerControllerBase : Controller {
        
        private IViewModelManager _HeadTrainerManager;
        
        private HeadTrainerViewModel _HeadTrainer;
        
        [InjectAttribute("HeadTrainer")]
        public IViewModelManager HeadTrainerManager {
            get {
                return _HeadTrainerManager;
            }
            set {
                _HeadTrainerManager = value;
            }
        }
        
        [InjectAttribute("HeadTrainer")]
        public HeadTrainerViewModel HeadTrainer {
            get {
                return _HeadTrainer;
            }
            set {
                _HeadTrainer = value;
            }
        }
        
        public System.Collections.Generic.IEnumerable<HeadTrainerViewModel> HeadTrainerViewModels {
            get {
                return HeadTrainerManager.OfType<HeadTrainerViewModel>();
            }
        }
        
        public override void Setup() {
            // This is called when the controller is created
            this.OnEvent<LoginCommand>().Subscribe(this.LoginHandler);
            this.OnEvent<fdsaCommand>().Subscribe(this.fdsaHandler);
            this.EventAggregator.OnViewModelCreated<HeadTrainerViewModel>().Subscribe(this.Initialize);;
            this.EventAggregator.OnViewModelDestroyed<HeadTrainerViewModel>().Subscribe(this.DisposingViewModel);;
        }
        
        public override void Initialize(ViewModel viewModel) {
            base.Initialize(viewModel);
            // This is called when a viewmodel is created
            this.InitializeHeadTrainer(((HeadTrainerViewModel)(viewModel)));
        }
        
        public virtual HeadTrainerViewModel CreateHeadTrainer() {
            return ((HeadTrainerViewModel)(this.Create()));
        }
        
        public override ViewModel CreateEmpty() {
            return new HeadTrainerViewModel(this.EventAggregator);
        }
        
        public virtual void InitializeHeadTrainer(HeadTrainerViewModel viewModel) {
            // This is called when a HeadTrainerViewModel is created
            HeadTrainerManager.Add(viewModel);
        }
        
        public override void DisposingViewModel(ViewModel viewModel) {
            base.DisposingViewModel(viewModel);
            HeadTrainerManager.Remove(viewModel);
        }
        
        public virtual void LoginHandler(LoginCommand command) {
            this.Login(command.Sender as HeadTrainerViewModel, command);
        }
        
        public virtual void fdsaHandler(fdsaCommand command) {
            this.fdsa(command.Sender as HeadTrainerViewModel, command.Argument);
        }
        
        public virtual void Login(HeadTrainerViewModel viewModel, LoginCommand arg) {
        }
        
        public virtual void fdsa(HeadTrainerViewModel viewModel, Single arg) {
        }
    }
}
