// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Invert.MVVMTest {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    
    
    public class ScreenControllerBase : Controller {
        
        public override void Initialize(ViewModel viewModel) {
            this.InitializeScreen(((ScreenViewModel)(viewModel)));
        }
        
        public virtual ScreenViewModel CreateScreen() {
            return ((ScreenViewModel)(this.Create()));
        }
        
        public override ViewModel CreateEmpty() {
            return new ScreenViewModel(this);
        }
        
        public virtual void InitializeScreen(ScreenViewModel viewModel) {
        }
    }
    
    public class HeadTrainerControllerBase : Controller {
        
        public override void Initialize(ViewModel viewModel) {
            this.InitializeHeadTrainer(((HeadTrainerViewModel)(viewModel)));
        }
        
        public virtual HeadTrainerViewModel CreateHeadTrainer() {
            return ((HeadTrainerViewModel)(this.Create()));
        }
        
        public override ViewModel CreateEmpty() {
            return new HeadTrainerViewModel(this);
        }
        
        public virtual void InitializeHeadTrainer(HeadTrainerViewModel viewModel) {
        }
        
        public virtual void MiniCamp(HeadTrainerViewModel viewModel) {
            viewModel.LoginFlowProperty.Transition("MiniCamp");
        }
        
        public virtual void DailyWorkout(HeadTrainerViewModel viewModel) {
            viewModel.LoginFlowProperty.Transition("DailyWorkout");
        }
        
        public virtual void BeginLogin(HeadTrainerViewModel viewModel) {
            viewModel.LoginFlowProperty.Transition("BeginLogin");
        }
        
        public virtual void LoginCompleted(HeadTrainerViewModel viewModel) {
        }
    }
    
    public class FormControllerBase : Controller {
        
        private HeadTrainerViewModel _HeadTrainer;
        
        private ScreenController _ScreenController;
        
        private HeadTrainerController _HeadTrainerController;
        
        private FormController _FormController;
        
        private LoginScreenController _LoginScreenController;
        
        private LandingPageScreenController _LandingPageScreenController;
        
        private WellnessSurveyScreenController _WellnessSurveyScreenController;
        
        private ProgressScreenController _ProgressScreenController;
        
        private DailyWorkoutResultsScreenController _DailyWorkoutResultsScreenController;
        
        [InjectAttribute("HeadTrainer")]
        public HeadTrainerViewModel HeadTrainer {
            get {
                return _HeadTrainer;
            }
            set {
                _HeadTrainer = value;
            }
        }
        
        [Inject()]
        public ScreenController ScreenController {
            get {
                return _ScreenController;
            }
            set {
                _ScreenController = value;
            }
        }
        
        [Inject()]
        public HeadTrainerController HeadTrainerController {
            get {
                return _HeadTrainerController;
            }
            set {
                _HeadTrainerController = value;
            }
        }
        
        [Inject()]
        public FormController FormController {
            get {
                return _FormController;
            }
            set {
                _FormController = value;
            }
        }
        
        [Inject()]
        public LoginScreenController LoginScreenController {
            get {
                return _LoginScreenController;
            }
            set {
                _LoginScreenController = value;
            }
        }
        
        [Inject()]
        public LandingPageScreenController LandingPageScreenController {
            get {
                return _LandingPageScreenController;
            }
            set {
                _LandingPageScreenController = value;
            }
        }
        
        [Inject()]
        public WellnessSurveyScreenController WellnessSurveyScreenController {
            get {
                return _WellnessSurveyScreenController;
            }
            set {
                _WellnessSurveyScreenController = value;
            }
        }
        
        [Inject()]
        public ProgressScreenController ProgressScreenController {
            get {
                return _ProgressScreenController;
            }
            set {
                _ProgressScreenController = value;
            }
        }
        
        [Inject()]
        public DailyWorkoutResultsScreenController DailyWorkoutResultsScreenController {
            get {
                return _DailyWorkoutResultsScreenController;
            }
            set {
                _DailyWorkoutResultsScreenController = value;
            }
        }
        
        public override void Initialize(ViewModel viewModel) {
            this.InitializeForm(((FormViewModel)(viewModel)));
        }
        
        public virtual FormViewModel CreateForm() {
            return ((FormViewModel)(this.Create()));
        }
        
        public override ViewModel CreateEmpty() {
            return new FormViewModel(this);
        }
        
        public virtual void InitializeForm(FormViewModel viewModel) {
        }
    }
}
