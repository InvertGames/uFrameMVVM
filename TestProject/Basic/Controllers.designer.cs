// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Invert.MVVMTest {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    
    
    public class GameControllerBase : Controller {
        
        private GameViewModel _Game;
        
        private GameController _GameController;
        
        private BoxesController _BoxesController;
        
        [InjectAttribute("Game")]
        public GameViewModel Game {
            get {
                return _Game;
            }
            set {
                _Game = value;
            }
        }
        
        [Inject()]
        public GameController GameController {
            get {
                return _GameController;
            }
            set {
                _GameController = value;
            }
        }
        
        [Inject()]
        public BoxesController BoxesController {
            get {
                return _BoxesController;
            }
            set {
                _BoxesController = value;
            }
        }
        
        public override void Initialize(ViewModel viewModel) {
            this.InitializeGame(((GameViewModel)(viewModel)));
        }
        
        public virtual GameViewModel CreateGame() {
            return ((GameViewModel)(this.Create()));
        }
        
        public override ViewModel CreateEmpty() {
            return new GameViewModel(this);
        }
        
        public virtual void InitializeGame(GameViewModel viewModel) {
        }
        
        public virtual void ChangeName(GameViewModel viewModel) {
            viewModel.GameFlowProperty.Transition("TestTrans");
        }
    }
    
    public class BoxesControllerBase : Controller {
        
        private GameViewModel _Game;
        
        private GameController _GameController;
        
        private BoxesController _BoxesController;
        
        [InjectAttribute("Game")]
        public GameViewModel Game {
            get {
                return _Game;
            }
            set {
                _Game = value;
            }
        }
        
        [Inject()]
        public GameController GameController {
            get {
                return _GameController;
            }
            set {
                _GameController = value;
            }
        }
        
        [Inject()]
        public BoxesController BoxesController {
            get {
                return _BoxesController;
            }
            set {
                _BoxesController = value;
            }
        }
        
        public override void Initialize(ViewModel viewModel) {
            this.InitializeBoxes(((BoxesViewModel)(viewModel)));
        }
        
        public virtual BoxesViewModel CreateBoxes() {
            return ((BoxesViewModel)(this.Create()));
        }
        
        public override ViewModel CreateEmpty() {
            return new BoxesViewModel(this);
        }
        
        public virtual void InitializeBoxes(BoxesViewModel viewModel) {
        }
    }
}
