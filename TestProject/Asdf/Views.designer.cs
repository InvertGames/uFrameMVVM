// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Invert.MVVMTest {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UniRx;
    using UnityEngine;
    
    
    public class AnotherViewBase : ViewBase {
        
        [UnityEngine.SerializeField()]
        [UFGroup("View Model Properties")]
        [UnityEngine.HideInInspector()]
        public String _FirstName;
        
        [UnityEngine.SerializeField()]
        [UFGroup("View Model Properties")]
        [UnityEngine.HideInInspector()]
        public String _LastName;
        
        [UnityEngine.SerializeField()]
        [UFGroup("View Model Properties")]
        [UnityEngine.HideInInspector()]
        public Vector3 _Position;
        
        public override System.Type ViewModelType {
            get {
                return typeof(GameViewModel);
            }
        }
        
        public GameViewModel Game {
            get {
                return (GameViewModel)ViewModelObject;
            }
        }
        
        public override ViewModel CreateModel() {
            return this.RequestViewModel(GameManager.Container.Resolve<GameController>());
        }
        
        protected override void InitializeViewModel(ViewModel model) {
            var anotherview = ((GameViewModel)model);
            anotherview.FirstName = this._FirstName;
            anotherview.LastName = this._LastName;
            anotherview.Position = this._Position;
        }
        
        public override void Bind() {
            base.Bind();
        }
        
        public virtual void ExecuteChangeName() {
            this.ExecuteCommand(Game.ChangeName);
        }
    }
}
