// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Invert.MVVMTest {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UniRx;
    
    
    public class LandingPageViewBase : ViewBase {
        
        public override System.Type ViewModelType {
            get {
                return typeof(LandingPageScreenViewModel);
            }
        }
        
        public LandingPageScreenViewModel LandingPageScreen {
            get {
                return (LandingPageScreenViewModel)ViewModelObject;
            }
        }
        
        public override ViewModel CreateModel() {
            return this.RequestViewModel(GameManager.Container.Resolve<LandingPageScreenController>());
        }
        
        protected override void InitializeViewModel(ViewModel model) {
            var landingpageview = ((LandingPageScreenViewModel)model);
        }
        
        public override void Bind() {
        }
    }
    
    public class WellnessSurveyViewBase : ViewBase {
        
        public override System.Type ViewModelType {
            get {
                return typeof(WellnessSurveyScreenViewModel);
            }
        }
        
        public WellnessSurveyScreenViewModel WellnessSurveyScreen {
            get {
                return (WellnessSurveyScreenViewModel)ViewModelObject;
            }
        }
        
        public override ViewModel CreateModel() {
            return this.RequestViewModel(GameManager.Container.Resolve<WellnessSurveyScreenController>());
        }
        
        protected override void InitializeViewModel(ViewModel model) {
            var wellnesssurveyview = ((WellnessSurveyScreenViewModel)model);
        }
        
        public override void Bind() {
        }
    }
    
    public class ScreenViewBase : ViewBase {
        
        [UnityEngine.SerializeField()]
        [UFGroup("View Model Properties")]
        [UnityEngine.HideInInspector()]
        public Boolean _Active;
        
        public override System.Type ViewModelType {
            get {
                return typeof(ScreenViewModel);
            }
        }
        
        public ScreenViewModel Screen {
            get {
                return (ScreenViewModel)ViewModelObject;
            }
        }
        
        public override ViewModel CreateModel() {
            return this.RequestViewModel(GameManager.Container.Resolve<ScreenController>());
        }
        
        protected override void InitializeViewModel(ViewModel model) {
            var screenview = ((ScreenViewModel)model);
            screenview.Active = this._Active;
        }
        
        public override void Bind() {
        }
    }
    
    public class ProgressScreenViewBase : ViewBase {
        
        public override System.Type ViewModelType {
            get {
                return typeof(ProgressScreenViewModel);
            }
        }
        
        public ProgressScreenViewModel ProgressScreen {
            get {
                return (ProgressScreenViewModel)ViewModelObject;
            }
        }
        
        public override ViewModel CreateModel() {
            return this.RequestViewModel(GameManager.Container.Resolve<ProgressScreenController>());
        }
        
        protected override void InitializeViewModel(ViewModel model) {
            var progressscreenview = ((ProgressScreenViewModel)model);
        }
        
        public override void Bind() {
        }
    }
}
