// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Invert.MVVMTest {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UniRx;
    
    
    public class LoginScreenViewBase : ViewBase {
        
        [UnityEngine.SerializeField()]
        [UFGroup("View Model Properties")]
        [UnityEngine.HideInInspector()]
        public String _Username;
        
        [UnityEngine.SerializeField()]
        [UFGroup("View Model Properties")]
        [UnityEngine.HideInInspector()]
        public String _Password;
        
        [UFToggleGroup("Username")]
        [UnityEngine.HideInInspector()]
        public bool _BindUsername = true;
        
        [UFGroup("Username")]
        [UnityEngine.SerializeField()]
        private UnityEngine.UI.InputField _Usernameinput;
        
        [UFToggleGroup("Password")]
        [UnityEngine.HideInInspector()]
        public bool _BindPassword = true;
        
        [UFGroup("Password")]
        [UnityEngine.SerializeField()]
        private UnityEngine.UI.InputField _Passwordinput;
        
        [UFToggleGroup("Login")]
        [UnityEngine.HideInInspector()]
        public bool _BindLogin = true;
        
        [UFGroup("Login")]
        [UnityEngine.SerializeField()]
        private UnityEngine.UI.Button _Loginbutton;
        
        public override System.Type ViewModelType {
            get {
                return typeof(LoginScreenViewModel);
            }
        }
        
        public LoginScreenViewModel LoginScreen {
            get {
                return (LoginScreenViewModel)ViewModelObject;
            }
        }
        
        public override ViewModel CreateModel() {
            return this.RequestViewModel(GameManager.Container.Resolve<LoginScreenController>());
        }
        
        protected override void InitializeViewModel(ViewModel model) {
            var loginscreenview = ((LoginScreenViewModel)model);
            loginscreenview.Username = this._Username;
            loginscreenview.Password = this._Password;
        }
        
        public override void Bind() {
            if (_BindUsername) {
                this.BindInputFieldToProperty(_Usernameinput, this.LoginScreen.UsernameProperty);
            }
            if (_BindPassword) {
                this.BindInputFieldToProperty(_Passwordinput, this.LoginScreen.PasswordProperty);
            }
            if (_BindLogin) {
                this.BindButtonToCommand(_Loginbutton, this.LoginScreen.Login);
            }
        }
        
        public virtual void ExecuteLogin() {
            this.ExecuteCommand(LoginScreen.Login);
        }
    }
}
