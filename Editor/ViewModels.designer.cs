// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Invert.uFrame.MVVM {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    
    
    public class ElementNodeViewModelBase : Invert.Core.GraphDesigner.GenericNodeViewModel<ElementNode> {
        
        public ElementNodeViewModelBase(ElementNode graphItemObject, Invert.Core.GraphDesigner.DiagramViewModel diagramViewModel) : 
                base(graphItemObject, diagramViewModel) {
        }
    }
    
    public class SimpleClassNodeViewModelBase : Invert.Core.GraphDesigner.GenericNodeViewModel<SimpleClassNode> {
        
        public SimpleClassNodeViewModelBase(SimpleClassNode graphItemObject, Invert.Core.GraphDesigner.DiagramViewModel diagramViewModel) : 
                base(graphItemObject, diagramViewModel) {
        }
    }
    
    public class ViewNodeViewModelBase : Invert.Core.GraphDesigner.GenericNodeViewModel<ViewNode> {
        
        public ViewNodeViewModelBase(ViewNode graphItemObject, Invert.Core.GraphDesigner.DiagramViewModel diagramViewModel) : 
                base(graphItemObject, diagramViewModel) {
        }
    }
    
    public class ComputedPropertyNodeViewModelBase : Invert.Core.GraphDesigner.GenericNodeViewModel<ComputedPropertyNode> {
        
        public ComputedPropertyNodeViewModelBase(ComputedPropertyNode graphItemObject, Invert.Core.GraphDesigner.DiagramViewModel diagramViewModel) : 
                base(graphItemObject, diagramViewModel) {
        }
    }
    
    public class SubsystemNodeViewModelBase : Invert.Core.GraphDesigner.GenericNodeViewModel<SubsystemNode> {
        
        public SubsystemNodeViewModelBase(SubsystemNode graphItemObject, Invert.Core.GraphDesigner.DiagramViewModel diagramViewModel) : 
                base(graphItemObject, diagramViewModel) {
        }
    }
    
    public class SceneManagerNodeViewModelBase : Invert.Core.GraphDesigner.GenericNodeViewModel<SceneManagerNode> {
        
        public SceneManagerNodeViewModelBase(SceneManagerNode graphItemObject, Invert.Core.GraphDesigner.DiagramViewModel diagramViewModel) : 
                base(graphItemObject, diagramViewModel) {
        }
    }
    
    public class MVVMNodeViewModelBase : Invert.Core.GraphDesigner.GenericNodeViewModel<MVVMNode> {
        
        public MVVMNodeViewModelBase(MVVMNode graphItemObject, Invert.Core.GraphDesigner.DiagramViewModel diagramViewModel) : 
                base(graphItemObject, diagramViewModel) {
        }
    }
    
    public class StateMachineNodeViewModelBase : Invert.Core.GraphDesigner.GenericNodeViewModel<StateMachineNode> {
        
        public StateMachineNodeViewModelBase(StateMachineNode graphItemObject, Invert.Core.GraphDesigner.DiagramViewModel diagramViewModel) : 
                base(graphItemObject, diagramViewModel) {
        }
    }
    
    public class StateNodeViewModelBase : Invert.Core.GraphDesigner.GenericNodeViewModel<StateNode> {
        
        public StateNodeViewModelBase(StateNode graphItemObject, Invert.Core.GraphDesigner.DiagramViewModel diagramViewModel) : 
                base(graphItemObject, diagramViewModel) {
        }
    }
    
    public class ViewComponentNodeViewModelBase : Invert.Core.GraphDesigner.GenericNodeViewModel<ViewComponentNode> {
        
        public ViewComponentNodeViewModelBase(ViewComponentNode graphItemObject, Invert.Core.GraphDesigner.DiagramViewModel diagramViewModel) : 
                base(graphItemObject, diagramViewModel) {
        }
    }
}
